{\rtf1\ansi\ansicpg1254\deff0\nouicompat\deflang1055{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset238 Calibri;}{\f2\fnil Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\i\f0\fs32\lang31 YAZILIM YA\f1\'aaAM D\f0\lang1033\'d6NG\'dcS\'dc (SDLC) VE MODELLER\f1\u304?\par

\pard\sa200\sl276\slmult1\i0\f0\fs22\'d6zet olarak:\par
Bu yaz\f1\u305?m\u305?zda, yaz\u305?l\u305?m ya\'baam d\f0\'f6ng\'fcs\'fcn\'fc ele alaca\f1\u287?\u305?z. Ayn\u305? zamanda da yaz\u305?l\u305?m ya\'baam d\f0\'f6ng\'fcs\'fcn\'fcn temel ad\f1\u305?mlar\u305?, yaz\u305?l\u305?m ya\'baam d\f0\'f6ng\'fcs\'fcndeki s\'fcre\'e7ler, bu s\'fcre\'e7lerde kullan\f1\u305?lan modellerin neler oldu\u287?u, kullan\u305?lan modellerin art\u305?lar\u305?n\u305?n ve eksilerinin ne oldu\u287?undan bahsedece\u287?iz. \u304?ncelenen modeller aras\u305?nda kar\'ba\u305?la\'bat\u305?rmalar yap\u305?p hangi modelin ne zaman daha mant\u305?kl\u305? oldu\u287?u hakk\u305?nda d\f0\'fc\f1\'ba\f0\'fcncelerimi payla\f1\'baaca\u287?\u305?m.\par
Yaz\u305?l\u305?m Ya\'baam D\f0\'f6ng\'fcs\'fc Nedir?\par
Yaz\f1\u305?l\u305?m ya\'baam d\f0\'f6ng\'fcs\'fc, (Software Development Life Cycle SDLC) yaz\f1\u305?l\u305?m\u305?n hem \f0\'fcretim hem de m\'fc\f1\'bateri taraf\u305?ndan kullan\u305?m\u305? s\f0\'fcre\'e7lerinde devam eden yaz\f1\u305?l\u305?m\u305? geli\'batirmek i\f0\'e7in ge\'e7irdi\f1\u287?i a\'baamalar\u305?n t\f0\'fcm\'fcne verilen isimdir diyebiliriz. Bu s\'fcre\'e7te zaman zaman kullan\f1\u305?c\u305? ihtiya\f0\'e7lar\f1\u305? ve \f0\'fcr\'fcn hatalar\f1\u305? ortaya \f0\'e7\f1\u305?kt\u305?\u287?\u305? i\f0\'e7in, s\'fcre\'e7 hi\'e7bir zaman tek y\'f6nl\'fc olmay\f1\u305?p geriye d\f0\'f6n\'fc\f1\'balerin yap\u305?ld\u305?\u287?\u305?, tekrarlar ile sorunlar\u305?n \f0\'e7\'f6z\'fcld\'fc\f1\u287?\f0\'fc veya yeni \'f6zelliklerin elde edildi\f1\u287?i bir d\f0\'f6ng\'fc halini al\f1\u305?r. Bu d\f0\'f6ng\'fcler sayesinde yaz\f1\u305?l\u305?m\u305?n geli\'baimi daha rahat ve planl\u305? bir hal al\u305?r. Bu d\f0\'f6ng\'fcdeki baz\f1\u305? temel ad\u305?mlar sayesinde zaman ve ekonomi y\f0\'f6netiminde daha h\'e2kim oldu\f1\u287?umuzu s\f0\'f6yleyebiliriz.\par
Yaz\f1\u305?l\u305?m ya\'baam d\f0\'f6ng\'fcs\'fcn\'fcn temel ad\f1\u305?mlar\u305?n\u305? genel olarak a\'baa\u287?\u305?daki gibi s\u305?n\u305?fland\u305?rabiliriz:\par
\f0\'b7 Planlama (Planning)\par
\'b7 Analiz (Analysis)\par
\'b7 Tasar\f1\u305?m (Design)\par
\f0\'b7 Ger\'e7ekle\f1\'batirme (Implementation)\par
\f0\'b7 Bak\f1\u305?m (Maintenance)\par
1. Planlama A\'baamas\u305?:\par
Bu a\'baamada \f0\'fcretilecek olan \'fcr\'fcn i\'e7in m\'fc\f1\'bateriden m\f0\'fc\f1\'baterinin gereksinimleri al\u305?n\u305?r ve \f0\'fcr\'fcn i\'e7in fizibilite \'e7al\f1\u305?\'bamas\u305? yap\u305?l\u305?r. Bu \f0\'e7al\f1\u305?\'bamalardan sonra planlamalar yap\u305?l\u305?r ve s\f0\'fcre\'e7 ba\f1\'balam\u305?\'ba olur.\par
2. Analiz (\f0\'c7\'f6z\'fcmleme) A\f1\'baamas\u305?:\par
Buradaki temel ama\f0\'e7 yaz\f1\u305?l\u305?m m\f0\'fchendisi a\'e7\f1\u305?s\u305?ndan mevcut yap\u305?lan plandaki \f0\'e7\'f6z\'fcm\'fcn incelenip m\'fc\f1\'bateri iste\u287?inin do\u287?ru bir \'baekilde anla\'ba\u305?l\u305?p anla\'ba\u305?lmad\u305?\u287?\u305?n\u305?n ortaya \f0\'e7\f1\u305?kar\u305?lmas\u305?d\u305?r. Bu a\'baamada gereksinimler detayl\u305? bir \'baekilde incelenir ve projede nelerin istenildi\u287?i ile ilgili analiz \f0\'e7al\f1\u305?\'bamalar\u305? da yap\u305?l\u305?r. Daha ayr\u305?nt\u305?l\u305? bir \'baekilde yap\u305?lan problem tan\u305?mlama a\'baamas\u305?d\u305?r da diyebiliriz. Her \'baey iki taraf\f0\'e7a a\'e7\f1\u305?k\f0\'e7a anla\f1\'ba\u305?l\u305?p kesinle\'batikten sonra dok\f0\'fcmantasyon yap\f1\u305?l\u305?r. \u304?ki tarafta olu\'baan ileti\'baim kopukluklar\u305?nda yaz\u305?l\u305?m m\f0\'fchendisi ve m\'fc\f1\'bateri ayn\u305? ortamda birlikte \f0\'e7al\f1\u305?\'bamalar yapabilirler. Bu s\f0\'fcre zarf\f1\u305?nda iki tarafta birbirini anlay\u305?p problemi daha rahat \f0\'e7\'f6z\'fcmleyebilir.\par
3. Tasar\f1\u305?m A\'baamas\u305?:\par
Gereksinim a\f0\'e7\f1\u305?k\f0\'e7a tan\f1\u305?mland\u305?ktan sonra ba\'balanmas\u305? gereken a\'baamad\u305?r. Bu a\'baamada tasar\u305?mlar yap\u305?l\u305?r. Tasar\u305?mlar mant\u305?ksal ve fiziksel tasar\u305?m olarak ikiye ayr\u305?l\u305?r.\par
Mant\u305?ksal Tasar\u305?m: \f0\'d6nerilen sistemin yap\f1\u305?s\u305?n\u305? anlat\u305?r. Olas\u305? \f0\'f6rg\'fctsel de\f1\u287?i\'baiklere \f0\'f6nerilir.\par
Fiziksel Tasar\f1\u305?m: Yaz\u305?l\u305?m\u305? i\f0\'e7eren bile\f1\'baenler ve bunlar\u305?n ayr\u305?nt\u305?lar\u305?n\u305? i\f0\'e7erir.\par
4. Ger\'e7ekle\f1\'batirme A\'baamas\u305?:\par
Kodlama ve test a\'baamalar\u305? yap\u305?ld\u305?ktan sonra kurulumun yap\u305?ld\u305?\u287?\u305? a\'baamad\u305?r.\par
5. Bak\u305?m A\'baamas\u305?:\par
Teslim edilen projenin art\u305?k bak\u305?m a\'baamas\u305? proje ya\'baam\u305? boyunca s\f0\'fcrecek \f1\'baekilde ba\'balam\u305?\'ba olur. Bu a\'baamada proje i\f0\'e7in varsa hatalar d\'fczeltilir, iyile\f1\'batirmeler yap\u305?l\u305?r, \f0\'fcr\'fcn i\'e7in istenilirse yeni \'f6zellikler eklenir.\par
YAZILIM YA\f1\'aaAM D\f0\'d6NG\'dcS\'dc MODELLER\f1\u304?\par
Yaz\u305?l\u305?m ya\'baam d\f0\'f6ng\'fcs\'fc s\'fcrecinde yaz\f1\u305?l\u305?m\u305?n geli\'bame safhas\u305?nda ge\f0\'e7irilen s\'fcre\'e7ler, temel ad\f1\u305?mlar\u305? ayn\u305? olmak ko\'bauluyla baz\u305? modellere ayr\u305?lm\u305?\'bat\u305?r. Ayr\u305?lan modeller geli\'bame s\f0\'fcrecinde nas\f1\u305?l bir a\'baaman\u305?n takip edilece\u287?ini, hangi d\f0\'fczen veya s\f1\u305?ran\u305?n izlenece\u287?i, s\f0\'fcrecin nas\f1\u305?l uygulanaca\u287?\u305? hakk\u305?nda sekt\f0\'f6re bilgiler vermektedir. S\'fcrecin bu tarzda farkl\f1\u305? modellere ayr\u305?lmas\u305? proje y\f0\'f6netimini karma\f1\'ba\u305?kl\u305?k ve b\f0\'fcy\'fck krizlerden kurtar\f1\u305?p, y\f0\'f6netim ve i\f1\'baleyi\'ba anlam\u305?nda kolayl\u305?klar sa\u287?lamaktad\u305?r. Modeller ilgili oldu\u287?u d\f0\'f6nemin donan\f1\u305?m ve teknolojileri ile d\f0\'f6nemin ihtiya\'e7lar\f1\u305? \f0\'e7er\'e7evesinde ortaya \'e7\f1\u305?km\u305?\'ba ve \f0\'f6nemli rol oynam\f1\u305?\'bat\u305?rlar. \f0\'d6zetle modeller yaz\f1\u305?l\u305?m sekt\f0\'f6r\'fcnde yol g\'f6sterici bir rehber rol\'fc oynamaktad\f1\u305?rlar. Modeller \f0\'fcretilen \'fcr\'fcn i\'e7in zaman zaman farkl\f1\u305?l\u305?k g\f0\'f6sterebilir. Bu d\'f6nemlerde do\f1\u287?ru model ve y\f0\'f6ntemi se\'e7mek, zaman ve ekonomi y\'f6netimi a\'e7\f1\u305?s\u305?ndan olduk\f0\'e7a \'f6nemlidir. Deneyimlerin ortaya koydu\f1\u287?u bir di\u287?er somut \f0\'f6rnekse do\f1\u287?ru modellerle y\f0\'f6netilen s\'fcre\'e7lerin her zaman daha kaliteli \'fcr\'fcn ortaya s\'fcrd\'fc\f1\u287?\f0\'fcd\'fcr.\par
Bu modeller iki temel k\f1\u305?sma ayr\u305?lm\u305?\'bat\u305?r. Geleneksel ve \f0\'e7evik yaz\f1\u305?l\u305?m s\f0\'fcre\'e7 modelleri olarak ikiye ayr\f1\u305?lm\u305?\'bat\u305?r.\par
Geleneksel Yaz\u305?l\u305?m S\f0\'fcre\'e7 Modelleri:\par
Geli\f1\'baig\f0\'fczel Model:\par
Asl\f1\u305?nda bu y\f0\'f6ntemi model olarak isimlendirmemiz do\f1\u287?ru olmaz. Ki\'baisel bir y\f0\'f6ntemdir denilebilir. Geli\f1\'baig\f0\'fczel geli\f1\'batirme a\'baamas\u305? i\f0\'e7in herhangi bir model veya takip edilecek yol yoktur. Ki\f1\'baiye \f0\'f6zel de\f1\u287?i\'baebilir y\f0\'f6ntem ve metotlar\f1\u305?n oldu\u287?u bir yol izlenir. Tek ki\'bailik \f0\'fcretim ortamlar\f1\u305?nda g\f0\'f6r\'fclen, basit programlamalar i\'e7in kullan\f1\u305?lan bir yoldur. Program\u305? yazan ki\'bai bile ileri zamanlar i\f0\'e7erisinde geriye d\'f6n\'fcp bakt\f1\u305?\u287?\u305?nda ne yapt\u305?\u287?\u305?n\u305? anlayamayabilir. Bu nedenle \f0\'fcr\'fcn\'fcn bak\f1\u305?m yap\u305?labilirli\u287?i neredeyse imkans\u305?zd\u305?r. 1960 \lquote l\u305? Y\u305?llarda basit programlamalar i\f0\'e7in kullan\f1\u305?lm\u305?\'bat\u305?r.\par
Barok Modeli:\par
1970'li Y\u305?llar\u305?n ortalar\u305?nda ortaya \f0\'e7\f1\u305?kan bu model ya\'baam d\f0\'f6ng\'fcs\'fcn\'fcn temel ad\f1\u305?mlar\u305?n\u305? do\u287?rusal bir bi\f0\'e7imde ger\'e7ekle\f1\'batirmeyi \f0\'f6ng\'f6rmektedir. Modelin en \'f6nemli \'f6zelli\f1\u287?i ise belgeleme olgusunu ayr\u305? bir s\f0\'fcre\'e7 olarak ele almas\f1\u305?d\u305?r. Belgeleme s\f0\'fcrecini yaz\f1\u305?l\u305?m geli\'batirme a\'baamas\u305?ndan sonra yap\u305?lmas\u305?n\u305? ele alm\u305?\'bat\u305?r. G\f0\'fcn\'fcm\'fczde belgeleme her s\'fcre\'e7te kullan\f1\u305?rken sadece 1 a\'baama olarak ele al\u305?nmas\u305? modelin zay\u305?f y\f0\'f6nlerindendir. Ayr\f1\u305?ca model de geri d\f0\'f6n\'fc\f1\'baler hakk\u305?nda bilgiler verilmemesi de eksi y\f0\'f6nlerinden bir tanesidir.\par
\'c7a\f1\u287?layan Ya\'baam-D\f0\'f6ng\'fc Modeli (\f1\'aaelale-Waterfall):\par
1970'li Y\u305?llarda ortaya \f0\'e7\f1\u305?kan bir modeldir. \f0\'dcretim s\'fcrecindeki temel ad\f1\u305?mlar\u305? ba\'batan sona en az bir kez izleyerek ger\f0\'e7ekle\f1\'bamektedir. Gereksinimleri iyi tan\u305?mlanm\u305?\'ba ve k\u305?sa vadede \f0\'fcretilebilecek olan projeler i\'e7in olduk\'e7a uygun bir modeldir. Barok modelinin aksine belgelemenin bir s\'fcre\'e7 a\f1\'baamas\u305?ndan ziyade \f0\'fcretimin her a\f1\'baamas\u305?nda bulunup yap\u305?lmas\u305? gerekti\u287?ini \f0\'f6ng\'f6r\'fcr. Her a\f1\'baama bir \f0\'f6nceki a\f1\'baama tamamlanmadan ba\'balayamaz. E\u287?er \f0\'fcr\'fcn gereksinimleri iyi tan\f1\u305?mlanmam\u305?\'ba veya \f0\'fcretim s\'fcresi uzun s\'fcrecekse model i\f1\'bae yaramaz. Barok modelinin geri d\f0\'f6n\'fc\f1\'ba belirsizlikleri burada yoktur.\par
Genelde yaz\u305?l\u305?m\u305?n kullan\u305?c\u305?ya ula\'bama zaman\u305? uzun oldu\u287?u i\f0\'e7in bu modelde sorunlar ya\f1\'baanabilmektedir.\par
\f0\'c7o\f1\u287?u zaman gereksinim tan\u305?mlamalar\u305? kesin bir \'baekilde netle\'batirilemez. Bu kesinli\u287?in olmamas\u305? nedeniyle hata ancak ger\f0\'e7ekle\f1\'batirme a\'baamas\u305?na gelindi\u287?inde anla\'ba\u305?labilir ve bu da epey zaman kayb\u305?na ve maliyete yol a\f0\'e7ar. Ayn\f1\u305? zamanda bu hatalardan kaynakl\u305? zaman kay\u305?plar\u305? i\'ba ortam\u305?nda \f0\'e7al\f1\u305?\'baanlar\u305?n motivasyonunu d\f0\'fc\f1\'ba\f0\'fcr\'fcrken m\'fc\f1\'bateriye kar\'ba\u305? da firman\u305?z ad\u305?na k\f0\'f6t\'fc bir imaj \'e7izer.\par
V S\'fcre\'e7 Modeli:\par
Bu modeli \'e7a\f1\u287?layan modelin uyarlanmas\u305? olarak d\f0\'fc\f1\'ba\f0\'fcnebiliriz. Model V harfini and\f1\u305?r\u305?rken sol taraf\u305? \f0\'fcretimi, sa\f1\u287? taraf\u305? ise s\u305?nama i\'balemleri ile ilgili a\'baamalardan olu\'bamaktad\u305?r. Her bir \f0\'fcretim a\f1\'baamas\u305?n\u305?n kar\'ba\u305?s\u305?nda bulunan s\u305?nama a\'baamalar\u305? sayesinde hata kaynaklar\u305?na d\f0\'f6n\'fc\f1\'ba daha kolayd\u305?r.\par
Modelde temel \f0\'e7\f1\u305?kt\u305?lar olarak: kullan\u305?c\u305? modeli, mimari model ve ger\f0\'e7ekle\f1\'batirim model olarak isimlendirilmi\'ba \f0\'fc\'e7 alt model vard\f1\u305?r.\par
Yine \f0\'e7a\f1\u287?layan modelde de oldu\u287?u gibi belirsizliklerin az ve gereksinim tan\u305?mlamalar\u305?n\u305?n net oldu\u287?u projelerde V s\f0\'fcre\'e7 modeli uygun bir model olarak ele al\f1\u305?n\u305?r.\par
Helezonik (Spiral) Model:\par
Risk analizi konusunun \f0\'f6zenle \'fczerinde duran bir modeldir. \'dcretti\f1\u287?i Prototipler sayesinde yinelemeli art\u305?r\u305?ml\u305? bir yakla\'ba\u305?m\u305? vard\u305?r.\par
Planlama, risk analizi, \f0\'fcretim ve kullan\f1\u305?c\u305? de\u287?erlendirmesi ad\u305?nda 4 ana a\'baamadan olu\'baup tekrarlan\u305?r. Tekrarlan\u305?rken yapt\u305?\u287?\u305? her bir tekrara faz denir. Bu fazlar esnas\u305?nda risk analizlerinin ard\u305?ndan kullan\u305?c\u305?dan olumlu ya da olumsuz yan\u305?t almak i\f0\'e7in, \'fcr\'fcn\'fcn prototipi \'fcretilip kullan\f1\u305?c\u305?ya sunulur. Her sunumun ard\u305?ndan al\u305?nan de\u287?erlendirmeler sonucu yeni geli\'batirilmi\'ba planlarla yeni bir faza ba\'balan\u305?r.\par
Modelin en \f0\'f6nemli avantajlar\f1\u305?ndan bir tanesi kullan\u305?c\u305? katk\u305?s\u305?n\u305?n \f0\'fcretimde \'f6nemli bir pay sahibi olmas\f1\u305?d\u305?r. Bu katk\u305? sayesinde \f0\'fcr\'fcn kullan\f1\u305?c\u305?n\u305?n isteklerinin tamam\u305?na yan\u305?t verebilirken, \f0\'fcretim esnas\f1\u305?nda da hatalar olduk\f0\'e7a erken fark edilerek zaman ve maliyet kayb\f1\u305? \f0\'f6nlenmi\f1\'ba olur.\par
Helezonik model komplike bir yap\u305?ya sahiptir. Spiral bazen sonsuza dek s\f0\'fcrebilir. Bu s\'fcre\'e7te belgelemeler olduk\'e7a fazla olacak ve karma\f1\'ba\u305?kl\u305?k daha da artacakt\u305?r. K\f0\'fc\'e7\'fck ve d\'fc\f1\'ba\f0\'fck riskli projeler i\'e7in pahal\f1\u305? bir modeldir.\par
Art\u305?r\u305?ml\u305? Geli\'batirme S\f0\'fcre\'e7 Modeli:\par
\'dcr\'fcn\'fc tek seferde teslim etmek yerine her yaz\f1\u305?l\u305?m s\f0\'fcr\'fcm\'fcnde yeni i\f1\'balevler eklenerek teslim edilen bir modeldir. Kullan\u305?c\u305? gereksinimleri \f0\'f6nceliklerine g\'f6re par\'e7alan\f1\u305?p yeni s\f0\'fcr\'fcmlerde par\'e7a par\'e7a eklenerek devam edilir. Bu s\'fcre\'e7te \'fcr\'fcn bir tarafta kullan\f1\u305?l\u305?rken di\u287?er k\u305?s\u305?mda ise hala \f0\'fcr\'fcn\'fcn geli\f1\'baimi devam etmektedir. \f0\'dcretimi uzun s\'fcrecek ve eksik gereksinimlere ra\f1\u287?men \f0\'e7al\f1\u305?\'baabilecek projelerde uygun bir modeldir.\par
Modelde \f0\'fcr\'fcn geli\f1\'baim safhas\u305?nda bir taraftan da kullan\u305?c\u305? taraf\u305?ndan kullan\u305?ld\u305?\u287?\u305? i\f0\'e7in hata riski d\'fc\f1\'baerken, \f0\'fcr\'fcn i\f1\'balevselli\u287?i erken a\'baamalarda olu\'bamaya ba\'balar. Projedeki erken teslimler, sonraki teslimler i\f0\'e7in gereksinimleri belirmede prototip g\'f6revi g\'f6r\'fcr. Projenin t\'fcmden batma riski d\'fc\f1\'ba\f0\'fcr\'fclm\'fc\f1\'ba olur.\par
Ara\'bat\u305?rma Tabanl\u305? S\f0\'fcre\'e7 Modeli:\par
Yap-at prototipi olarak bilinen bir modeldir. B\'fct\'fcn anlam\f1\u305?yla belirsizliklerin bulundu\u287?u \f0\'e7al\f1\u305?\'bamalarda kullan\u305?l\u305?r. Sonu\f0\'e7lar\f1\u305? kestiremeyebilirsiniz. Bu sebeple maliyet hakk\u305?nda planlamalar da yapamazs\u305?n\u305?z.\par
Evrimsel Geli\'batirme S\f0\'fcre\'e7 Modeli:\par
M\'fc\f1\'baterinin isteklerinin anla\'ba\u305?lmad\u305?\u287?\u305? zamanlarda kullan\u305?lan modeldir. M\f0\'fc\f1\'bateri ile birlikte yap\u305?lan \f0\'e7al\f1\u305?\'bamalar sonucunda taslak bir sistem olu\'baturulur. En net anla\'ba\u305?lan gereksinimlerle ba\'balan\u305?l\u305?p, m\f0\'fc\f1\'bateri taraf\u305?ndan talep edilen yeni \f0\'f6zellikler s\'fcre\'e7 boyunca eklenir. Modelin ba\f1\'baar\u305?s\u305? ilk evrimin ba\'baar\u305?s\u305?na ba\u287?l\u305?d\u305?r.\par
Model, kullan\u305?c\u305?n\u305?n gereksinimlerinin ne oldu\u287?unu anlamas\u305?nda yard\u305?mc\u305? olur. S\f0\'fcrekli de\f1\u287?erlendirmeler geli\'batirme risklerinin azalt\u305?r. Buna ba\u287?l\u305? olarak hatalar azal\u305?r.\par
S\f0\'fcrecin g\'f6r\'fcn\'fcrl\'fc\f1\u287?\f0\'fc ve izlenebilirli\f1\u287?i zordur. S\f0\'fcrekli bir de\f1\u287?i\'baim s\f0\'f6z konusu oldu\f1\u287?u i\f0\'e7in yaz\f1\u305?l\u305?m yap\u305?s\u305? zarar g\f0\'f6rebilir. Gereksinimler de\f1\u287?i\'batirilmek zorunda kalabilir. Bu problemler bak\u305?m\u305? zorla\'bat\u305?r\u305?r.\par
Kodla ve D\f0\'fczelt Ya\f1\'baam-D\f0\'f6ng\'fc Modeli:\par
K\'fc\'e7\'fck yap\f1\u305?daki programlar i\f0\'e7in kullan\f1\u305?lan bir modeldir. \f0\'dcr\'fcn\'fc direkt ger\'e7ekle\f1\'batirilmeye odaklan\u305?lm\u305?\'bat\u305?r. Belgeleme yap\u305?lmaz. Belgelemelerin yap\u305?lmamas\u305?ndan dolay\u305? bak\u305?m\u305? zordur.\par
\f0\'c7evik Yaz\f1\u305?l\u305?m\par
Geli\'baen teknolojilerle b\f0\'fcy\'fcyen yaz\f1\u305?l\u305?m d\f0\'fcnyas\f1\u305?nda, kullan\u305?c\u305?lar\u305?n daha kaliteli \f0\'fcr\'fcnlere daha ucuz ve daha k\f1\u305?sa s\f0\'fcrede ula\f1\'bamak istemesi, yaz\u305?l\u305?m sekt\f0\'f6r\'fcnde \'e7evik y\'f6ntemlerin geli\f1\'bamesine yol a\f0\'e7m\f1\u305?\'bat\u305?r. Bu y\f0\'f6ntemlerin amac\f1\u305?, geli\'batirme s\f0\'fcrecindeki baz\f1\u305? y\f0\'fcklerden kurtularak sonuca daha h\f1\u305?zl\u305? ula\'ba\u305?p, de\u287?i\'baen ihtiya\f0\'e7lara daha erken cevap vermektir. Ayn\f1\u305? zamanda y\f0\'fcksek performans sa\f1\u287?layan, hata riski en az ve ucuz yollu \f0\'e7\'f6z\'fcmler olu\f1\'baturmak da oldu\u287?unu s\f0\'f6yleyebiliriz.\par
\'c7evik geli\f1\'batirme metodu; de\u287?i\'baimi, par\f0\'e7a par\'e7a yaz\f1\u305?l\u305?m teslimat\u305?n\u305?, birlikte uyumlu \f0\'e7al\f1\u305?\'bamay\u305?, test odakl\u305? yaz\u305?l\u305?m geli\'batirilmesini ve uyumlu planlamay\u305? te\'bavik eder. Birlikte \f0\'e7al\f1\u305?\'bamay\u305? te\'bavik eden bu metot yaz\u305?l\u305?mc\u305? arkada\'balar\u305?n da morallerini y\f0\'fcksek tutmay\f1\u305? sa\u287?lad\u305?\u287?\u305? i\f0\'e7in \'fcretim daha kolay ve h\f1\u305?zl\u305? bir \'baekilde devam ederken sonuca gelindi\u287?inde kaliteli \f0\'fcr\'fcnler elde edilir.\par
Extreme Programming (XP) ve Scrum en pop\'fcler iki y\'f6ntemdir.\par
Extreme Programming (XP):\par
1999 Y\f1\u305?l\u305?nda Kent Beck taraf\u305?ndan ortaya \f0\'e7\f1\u305?kar\u305?lm\u305?\'ba; ileti\'baim, basitlik, feedback ve cesaretlendirme \f0\'fczerine kurulmu\f1\'ba bir yaz\u305?l\u305?m geli\'batirme disiplinidir. Disiplinde tak\u305?m \f0\'e7al\f1\u305?\'bamas\u305? s\f0\'f6z konusudur. Tak\f1\u305?m aras\u305?ndaki ileti\'baimde yap\u305?lan geri d\f0\'f6n\'fc\f1\'balerle \f0\'e7al\f1\u305?\'baman\u305?n nerede oldu\u287?u g\f0\'f6r\'fclebilir ve \'e7al\f1\u305?\'bama temposunu duruma g\f0\'f6re ayarlayabilirler.\par
Extreme programming\rquote in 4 temel de\f1\u287?er \f0\'fczerine kuruldu\f1\u287?unu s\f0\'f6ylemi\f1\'batik. 4 temel de\u287?eri inceledi\u287?imizde bu disiplinin nas\u305?l ba\'baar\u305?ya g\f0\'f6t\'fcrd\'fc\f1\u287?\f0\'fcn\'fc asl\f1\u305?nda g\f0\'f6rebiliriz.\par
\f1\u304?leti\'baim: Proje \f0\'e7al\f1\u305?\'bamalar\u305?nda \f0\'e7o\f1\u287?u zaman ya\'baanan en b\f0\'fcy\'fck problemlerden birisi de ekipteki insanlar\f1\u305?n birbirleri ile tam olarak anla\'baamamas\u305?. XP projelerde ya\'baanan bu problemi ortadan kald\u305?rmay\u305? ve sa\u287?l\u305?kl\u305? bir ileti\'baimi ama\f0\'e7lar. Bu y\'fczden XP de ileti\f1\'baim y\f0\'fcz y\'fcze ve anla\f1\'ba\u305?l\u305?r olmal\u305?d\u305?r. Olu\'baabilecek bilgi eksikliklerinde proje h\u305?z\u305? d\f0\'fc\f1\'ba\f0\'fcr\'fclmeden bilgi elde edilmeli ve ekibe iletilmelidir.\par
Basitlik: Yap\f1\u305?lmas\u305? gereken i\'baler karma\'ba\u305?kl\u305?ktan uzak ve en basit bir \'baekilde \f0\'e7\'f6z\'fclmelidir. XP esnek ve basit bir sistem ile gereksinimleri kar\f1\'ba\u305?lamay\u305? ama\f0\'e7lar.\par
Feedback: Geri bildirimler sayesinde projede ortaya \'e7\f1\u305?kabilecek hatalar ortadan kald\u305?r\u305?l\u305?r. Bu geri bildirimler m\f0\'fc\f1\'bateri, y\f0\'f6netici ve di\f1\u287?er proje \f0\'e7al\f1\u305?\'baanlar\u305? taraf\u305?ndan yap\u305?labilir. M\f0\'fc\f1\'bateri ve yaz\u305?l\u305?m ekibi de belirli aral\u305?klarda bulu\'baup projede gelinen noktaya kadar inceleyip sonras\u305? i\f0\'e7in olu\f1\'baabilecek anla\'bamazl\u305?klar\u305? ortadan kald\u305?r\u305?rlar.\par
Cesaretlendirme: Bir \f0\'fcr\'fcn ortaya koyarken en b\'fcy\'fck korkumuz \ldblquote Acaba sonuca do\f1\u287?ru bir \'baekilde ula\'baabilir miyim?\rdblquote  korkusu oluyor. Ve bu korku bazen yapmam\u305?z gereken \'baeyleri yapmamam\u305?z i\f0\'e7in bize bir engel olabiliyor. XP de bu engellerin gereksiz oldu\f1\u287?unu ve yaz\u305?l\u305?mc\u305?n\u305?n hata yapmaktan korkmamas\u305? gerekti\u287?ini savunur. Olu\'baabilecek bir ba\'baar\u305?s\u305?zl\u305?ktan sonra onu en k\u305?sa s\f0\'fcrede telafi etmenin daha do\f1\u287?ru bir yakla\'ba\u305?m oldu\u287?unu \f0\'f6nerir.\par
XP yaz\f1\u305?l\u305?m geli\'batirme disiplini esnek ve basit bir yaz\u305?l\u305?m geli\'batirmek i\f0\'e7in 12 pratik y\'f6nteme sahiptir.\par
\'b7 Planlama Oyunu,\par
\'b7 Ekipte M\'fc\f1\'bateri,\par
\f0\'b7 \'d6nce Test,\par
\'b7 Basit Tasar\f1\u305?m,\par
\f0\'b7 \'c7iftli Programlama,\par
\'b7 S\'fcrekli Entegrasyon,\par
\'b7 K\f1\u305?sa Aral\u305?kl\u305? S\f0\'fcr\'fcmler,\par
\'b7 Yeniden Yap\f1\u305?land\u305?rma,\par
\f0\'b7 Ortak Kod Sahiplenme,\par
\'b7 Metafor,\par
\'b7 Kodlama Standard\f1\u305?,\par
\f0\'b7 Haftada 40 Saat.\par
SCRUM:\par
\'c7evik yaz\f1\u305?l\u305?m geli\'batirme y\f0\'f6ntemlerinden bir tanesi olan scrum kompleks yaz\f1\u305?l\u305?m s\f0\'fcre\'e7lerinin y\'f6netilmesinde kullan\f1\u305?l\u305?r. Ad\u305?n\u305? rugby sporundaki bir h\f0\'fccum takti\f1\u287?inden alan bu metot ileti\'baime ve tak\u305?m \f0\'e7al\f1\u305?\'bamas\u305?na olduk\f0\'e7a dikkat eder. Rugbydeki mant\f1\u305?\u287?\u305? da t\f0\'fcm tak\f1\u305?m oyuncular\u305?yla birlikte kar\'ba\u305? sahaya ta\'ba\u305?narak atak yapmas\u305? olan scrum tak\u305?m oyununa epey bir \f0\'f6nem veriyor.\par
Scrum metodunda, projenin ilerleyi\f1\'ba s\f0\'fcreci, sorunlar\f1\u305? ve geli\'bameleri izlenebilir bir yap\u305?ya sahip olmal\u305?d\u305?r. Proje ilerleyi\'bai d\f0\'fczenli olarak kontrol edilebilir olmas\f1\u305? gerekirken, proje yap\u305?labilecek herhangi bir de\u287?i\'baikli\u287?e uyum sa\u287?layabilmelidir.\par
Kompleks yap\u305?daki i\'baleri k\f0\'fc\'e7\'fck birimlere b\'f6lerek geli\f1\'batirmeyi \f0\'f6n g\'f6ren bu metot, karma\f1\'ba\u305?k ortamlarda ad\u305?m ad\u305?m \f0\'e7al\f1\u305?\'baan yaz\u305?l\u305?m geli\'batiricileri i\f0\'e7in epey bir uygundur. Gereksinimleri a\'e7\f1\u305?k bir \'baekilde tan\u305?mlanmam\u305?\'ba, karma\'ba\u305?kl\u305?\u287?\u305? giderilmemi\'ba projeler i\f0\'e7in en uygun modelin scrum oldu\f1\u287?unu s\f0\'f6yleyebiliriz. 30 G\'fcn\'fc a\f1\'bamayan g\f0\'fcnde 15'er dakikal\f1\u305?k toplant\u305?lar ile i\'ba takibi yap\u305?l\u305?r.\par
3 Temel kavram \f0\'fczerinde duran Scrum bu kavramlar \'e7er\'e7ecesinde hareket etmektedir.\par
1)Roller:\par
-\'dcr\'fcn sahibi: Projede geri d\'f6n\'fc\f1\'balerden sorumlu m\f0\'fc\f1\'bateri veya m\f0\'fc\f1\'bateri temsilcisi.\par
-Scrum y\f0\'f6neticisi: Tak\f1\u305?m\u305?n Scrum metoduna ba\u287?l\u305? kalmas\u305?n\u305? sa\u287?layan, organizasyonlar\u305? Scruma adapte eden ki\'bai\par
-Scrum tak\u305?m\u305?: Birbirleri ile devaml\u305? ileti\'baim halinde hedefe birlikte ilerleyen Scrum metoduna uyum sa\u287?lam\u305?\'ba tak\u305?m.\par
2) Toplant\u305?lar\par
-Sprint (Ko\'bau) Planlama: Gereksinim listesinin \f0\'e7\f1\u305?kar\u305?l\u305?p k\f0\'fc\'e7\'fck birimlere b\'f6l\'fcnmesinden sonra tak\f1\u305?mlara uygun bir \'baekilde da\u287?\u305?t\u305?m yap\u305?l\u305?r. Risk de\u287?erlendirmeleri ve risk kontrollerinin belirlenmesi ger\f0\'e7ekle\f1\'bair. Geli\'batirme ara\f0\'e7lar\f1\u305? ve altyap\u305?s\u305? onaylan\u305?r. Da\u287?\u305?t\u305?m, geli\'batirme ve pazarlama maliyetleri hesaplan\u305?r.\par
-Sprint (Ko\'bau) G\f0\'f6zden Ge\'e7irme: Her sprint sonunda yap\f1\u305?lan bu toplant\u305?larda yap\u305?lan sprint g\f0\'f6zden ge\'e7irilir ve ortaya \'e7\f1\u305?kan \f0\'fcr\'fcn de\f1\u287?erlendirilir. Ama\f0\'e7 yaz\f1\u305?l\u305?m\u305?n \f0\'fcr\'fcn sahibinin gereksinimlerine uygun bir \f1\'baekilde geli\'batirildi\u287?inden emin olmakt\u305?r.\par
-G\f0\'fcnl\'fck Scrum Toplant\f1\u305?s\u305?: Her g\f0\'fcn ayn\f1\u305? saatte ayak \f0\'fcst\'fc yap\f1\u305?lan 15 dakikal\u305?k toplant\u305?lard\u305?r. Tak\u305?mdaki her \f0\'fcye \lquote D\'fcn ne yapt\f1\u305?m?\rquote , \lquote Bug\f0\'fcn ne yapaca\f1\u287?\u305?m?\rquote , \lquote\u304?\'baimi engelleyen herhangi bir sorun var m\u305??\rquote  sorular\u305?na cevap verir. E\u287?er bir problem varsa tak\u305?m arkada\'balar\u305?ndan bu probleme yard\u305?mc\u305? olabilecek birisi arkada\'ba\u305?na yard\u305?mc\u305? olur.\par
3) Bile\'baenler/Ara\f0\'e7lar\par
-\'dcr\'fcn Gereksinim Dok\'fcman\f1\u305?: Proje boyunca yap\u305?lmas\u305? gereken i\'ba elemanlar\u305?n\u305?n basit bir listesi.\par
-Sprint (Ko\'bau) Dok\f0\'fcman\f1\u305?: Mevcut sprintteki \f0\'fcr\'fcn gereksinim dok\'fcman\f1\u305?.\par
-Sprint Kalan Zaman Grafi\u287?i: Scrumda ge\f0\'e7en zaman\f1\u305? ve kalan planl\u305? zaman\u305? g\f0\'f6steren grafik.\par
Scrum\rquote\f1\u305?n Pop\f0\'fclerli\f1\u287?i:\par
Karma\'ba\u305?k yap\u305?lar\u305? basite indirgeyerek, \f0\'fcr\'fcn sahibi ile yap\f1\u305?lan toplant\u305?lar\u305?n ard\u305?ndan gereksinimleri anla\'ba\u305?l\u305?r bir hale getiren, \f0\'fcr\'fcn geli\f1\'batirme metodu scrum ekip \f0\'e7al\f1\u305?\'bamas\u305?na da \f0\'f6nem verir. Ekip aras\f1\u305?ndaki ileti\'baimi ve motivasyonu yukar\u305? \f0\'e7eken bir metot olmas\f1\u305? da \'bairketler i\f0\'e7in art\f1\u305?lar\u305?ndan bir tanesidir. G\f0\'fcnl\'fck yap\f1\u305?lan k\u305?sa toplant\u305?lar ile de kontrolleri sa\u287?layan metot hata ve tak\u305?m aras\u305?ndaki ileti\'baim kopukluklar\u305?na da engel olur. Bu y\f0\'fczden scrum metodu yaz\f1\u305?l\u305?m geli\'batiriciler a\f0\'e7\f1\u305?s\u305?ndan olduk\f0\'e7a pop\'fcler ve kullan\f1\u305?\'bal\u305?d\u305?r.\par
\par
SDLC (Software Development Life Cycle) Nedir?\par
29 May\u305?s 2017Zeynep Ayg\f0\'fcn\par
Merhabalar,\par
Bu yaz\f1\u305?mda SDLC s\f0\'fcrecinden bahsediyor olaca\f1\u287?\u305?m.\par
SDLC, Yaz\u305?l\u305?m \f0\'dcr\'fcnlerini geli\f1\'batirmek veya de\u287?i\'batirmek i\f0\'e7in planlanan  yaz\f1\u305?l\u305?m geli\'batirme s\f0\'fcrecidir. Yaz\f1\u305?l\u305?m \f0\'fcr\'fcnlerinin nas\f1\u305?l geli\'batirilmesi gerekti\u287?ini veya nas\u305?l iyile\'batirilmesi gerekti\u287?ini anlatan ayr\u305?nt\u305?l\u305? bir plan i\f0\'e7eriyor.\par
SDLC, y\'fcksek kaliteli yaz\f1\u305?l\u305?mlar\u305? tasarlamak, geli\'batirmek ve test etmek i\f0\'e7in yaz\f1\u305?l\u305?m end\f0\'fcstrisi taraf\f1\u305?ndan kullan\u305?lan bir s\f0\'fcre\'e7tir.\par
A\f1\'baa\u287?\u305?daki resim bir SDLC\rquote nin \f0\'e7e\f1\'baitli a\'baamalar\u305?n\u305? grafik olarak g\f0\'f6stermektedir.\par
sdlc\par
\par
Bu makalede  SDLC temelleri, mevcut SDLC modelleri ve end\'fcstrideki uygulamalar\f1\u305?, \f0\'c7evik, RAD ve Prototipleme gibi di\f1\u287?er ilgili y\f0\'f6ntemler hakk\f1\u305?nda genel bilgi verilmektedir\par
SDLC, m\f0\'fc\f1\'bateri beklentilerini kar\'ba\u305?layan veya a\'baan, zaman i\f0\'e7inde tamamlanmaya ve maliyet tahminlerine eri\f1\'baen y\f0\'fcksek kaliteli bir yaz\f1\u305?l\u305?m \f0\'fcretmeyi ama\'e7lamaktad\f1\u305?r.\par
ISO / IEC 12207, yaz\u305?l\u305?m ya\'baam d\f0\'f6ng\'fcs\'fc s\'fcre\'e7leri i\'e7in uluslararas\f1\u305? bir standartt\u305?r. Yaz\u305?l\u305?m geli\'batirmede ve bak\u305?m\u305?nda gerekli olan t\f0\'fcm g\'f6revleri tan\f1\u305?mlayan standart olmay\u305? hedeflemektedir.\par
Yaz\u305?l\u305?m Ya\'baam D\f0\'f6ng\'fcs\'fc Temel A\f1\'baamalar\u305?\par
(Software Development Life Cycle  Core Processes)  Nelerdir?\par
1. A\'baama : Planlama ve Gerekinim Analizi\par
\u304?htiya\f0\'e7 analizi, SDLC\rquote nin en \'f6nemli ve en temel a\f1\'baamas\u305?d\u305?r. M\f0\'fc\f1\'bateri, sat\u305?\'ba departman\u305?, pazar ara\'bat\u305?rmalar\u305? ve alan uzmanlar\u305?n\u305?n girdileri ile ekibin k\u305?demli \f0\'fcyeleri taraf\f1\u305?ndan ger\f0\'e7ekle\f1\'batirilir. Bu bilgi daha sonra temel proje yakla\'ba\u305?m\u305?n\u305? planlamak ve ekonomik, operasyonel ve teknik alanlarda \f0\'fcr\'fcn fizibilite \'e7al\f1\u305?\'bamas\u305? yapmak i\f0\'e7in kullan\f1\u305?l\u305?r.\par
Kalite g\f0\'fcvencesi gereksinimlerinin planlanmas\f1\u305? ve projeyle ili\'bakili risklerin tan\u305?mlanmas\u305? planlama a\'baamas\u305?nda da yap\u305?l\u305?r. Teknik fizibilite \f0\'e7al\f1\u305?\'bamas\u305?n\u305?n sonucu, projeyi minimum risklerle ba\'baar\u305?yla uygulamak i\f0\'e7in izlenebilecek \'e7e\f1\'baitli teknik yakla\'ba\u305?mlar\u305? tan\u305?mlamakt\u305?r.\par
2.A\'baama : \'aaartlar\u305? Tan\u305?mlama\par
\u304?htiya\f0\'e7 analizi yap\f1\u305?ld\u305?ktan sonra bir sonraki ad\u305?m, \f0\'fcr\'fcn gereksinimlerini a\'e7\f1\u305?k\f0\'e7a tan\f1\u305?mlamak ve belgelemek ve m\f0\'fc\f1\'bateriden veya piyasa analistlerinden onay almakt\u305?r. Bu, proje \f0\'f6mr\'fc boyunca tasarlanacak ve geli\f1\'batirilecek t\f0\'fcm \'fcr\'fcn gereksinimlerini i\'e7eren bir SRS (Yaz\f1\u305?l\u305?m Gereksinimi Belgesi) belgesi arac\u305?l\u305?\u287?\u305?yla yap\u305?l\u305?r.\par
3.A\'baama : \f0\'dcr\'fcn Mimarisini Tasarlamak\par
SRS, \'fcr\'fcn mimarlar\f1\u305? i\f0\'e7in geli\f1\'batirilecek \f0\'fcr\'fcn i\'e7in en iyi mimari ile ortaya \'e7\f1\u305?kabilecek referans. SRS\rquote de belirtilen gerekliliklere dayanarak, genellikle \f0\'fcr\'fcn mimarisi i\'e7in birden fazla tasar\f1\u305?m yakla\'ba\u305?m\u305? \f0\'f6nerilir ve DDS \f2\endash  Tasar\f1\u305?m Belge \'aaartnamesinde belgelenir.\par
Bu DDS t\f0\'fcm \'f6nemli payda\f1\'balar taraf\u305?ndan g\f0\'f6zden ge\'e7irilir ve risk de\f1\u287?erlendirmesi, \f0\'fcr\'fcn sa\f1\u287?laml\u305?\u287?\u305?, tasar\u305?m mod\f0\'fclerli\f1\u287?i, b\f0\'fct\'e7e ve zaman k\f1\u305?s\u305?tlamalar\u305? gibi \f0\'e7e\f1\'baitli parametrelere dayanarak \f0\'fcr\'fcn i\'e7in en iyi tasar\f1\u305?m yakla\'ba\u305?m\u305? se\f0\'e7ilir.\par
Bir tasar\f1\u305?m yakla\'ba\u305?m\u305?, \f0\'fcr\'fcn\'fcn t\'fcm mimari mod\'fcllerini (varsa) harici ve \'fc\'e7\'fcnc\'fc taraf mod\'fclleri ile ileti\f1\'baim ve veri ak\u305?\'ba\u305? g\f0\'f6sterimi ile a\'e7\f1\u305?k\f0\'e7a tan\f1\u305?mlar. \f0\'d6nerilen mimarinin t\'fcm mod\'fcllerinin i\'e7 tasar\f1\u305?m\u305?, DDS\rquote deki detaylar\u305? ile  a\f0\'e7\f1\u305?k\f0\'e7a tan\f1\u305?mlanmal\u305?d\u305?r.\par
4. A\'baama: \f0\'dcr\'fcn\'fc Geli\f1\'batirme \par
SDLC\rquote nin bu a\'baamas\u305?nda ger\f0\'e7ek geli\f1\'bame ba\'balar ve \f0\'fcr\'fcn olu\f1\'baturulur. Programlama kodu, bu a\'baamada DDS\rquote ye g\f0\'f6re \'fcretilir. Tasar\f1\u305?m ayr\u305?nt\u305?l\u305? ve organize bir \'baekilde ger\f0\'e7ekle\f1\'batirilirse, kod \f0\'fcretimi \'e7ok fazla g\'fc\'e7l\'fck \'e7ekilmeksizin ger\'e7ekle\f1\'batirilebilir.\par
Geli\'batiriciler, kurulu\'balar\u305? taraf\u305?ndan tan\u305?mlanan kodlama y\f0\'f6nergelerine uymal\f1\u305? ve kod \f0\'fcretmek i\'e7in derleyiciler, terc\'fcmanlar, hata ay\f1\u305?klay\u305?c\u305?lar vb. Programlama ara\f0\'e7lar\f1\u305? kullan\u305?lmaktad\u305?r. Kodlama i\f0\'e7in C, C ++, Pascal, Java ve PHP gibi farkl\f1\u305? \f0\'fcst d\'fczey programlama dilleri kullan\f1\u305?l\u305?r. Programlama dili, geli\'batirilen yaz\u305?l\u305?m\u305?n t\f0\'fcr\'fcne g\'f6re se\'e7ilir.\par
5 .A\f1\'baama : \f0\'dcr\'fcn\'fcn Test Edilmesi\par
Bu a\f1\'baamada, modern SDLC modellerinde oldu\u287?u gibi, genellikle t\f0\'fcm a\f1\'baamalardan bir alt k\f0\'fcme, test etkinlikleri \'e7o\f1\u287?unlukla SDLC\rquote nin t\f0\'fcm a\f1\'baamalar\u305?nda yer al\u305?r. Bununla birlikte, bu a\'baama, \f0\'fcr\'fcn SRS\rquote de tan\f1\u305?mlanan kalite standartlar\u305?na eri\'baene kadar, \f0\'fcr\'fcn kusurlar\f1\u305?n\u305?n raporland\u305?\u287?\u305?, izlendi\u287?i, sabitlendi\u287?i ve tekrar test edildi\u287?i test a\'baamas\u305?na i\'baaret eder.\par
6.A\'baama : Piyasadaki Da\u287?\u305?t\u305?m ve Bak\u305?m\par
\f0\'dcr\'fcn test edildikten ve kurulmaya haz\f1\u305?r hale getirildi\u287?inde, uygun piyasada resmen piyasaya s\f0\'fcr\'fcl\'fcr. Bazen \'fcr\'fcn da\f1\u287?\u305?t\u305?m i\'balemi, o kurulu\'baun i\'baletme stratejisine g\f0\'f6re kademeli olarak ger\'e7ekle\f1\'bair. \f0\'dcr\'fcn ilk \'f6nce s\f1\u305?n\u305?rl\u305? bir segmentte serbest b\u305?rak\u305?labilir ve ger\f0\'e7ek i\f1\'ba ortam\u305?nda test edilebilir (UAT- Kullan\u305?c\u305? kabul testi).\par
Ard\u305?ndan, geri beslemeye dayanarak, \f0\'fcr\'fcn, oldu\f1\u287?u gibi b\u305?rak\u305?labilir veya hedefleme pazar segmentinde \f0\'f6nerilen geli\f1\'batirmelerle b\u305?rak\u305?labilir. \f0\'dcr\'fcn piyasaya s\'fcr\'fcld\'fckten sonra bak\f1\u305?m, mevcut m\f0\'fc\f1\'bateri taban\u305? i\f0\'e7in yap\f1\u305?l\u305?r.\par
SDLC Modelleri Nelerdir?\par
Yaz\u305?l\u305?m geli\'batirme s\f0\'fcreci boyunca takip edilen \'e7e\f1\'baitli yaz\u305?l\u305?m geli\'batirme ya\'baam d\f0\'f6ng\'fcs\'fc modelleri tan\f1\u305?mlanm\u305?\'ba ve tasarlanm\u305?\'bat\u305?r. Bu modellere Yaz\u305?l\u305?m Geli\'batirme S\f0\'fcreci Modelleri denir \ldblquote Her i\f1\'balem modeli, yaz\u305?l\u305?m geli\'batirme s\f0\'fcrecinde ba\f1\'baar\u305?l\u305? olmas\u305?n\u305? sa\u287?lamak i\f0\'e7in kendi t\'fcr\'fcne \'f6zg\'fc bir dizi ad\f1\u305?m izler. Sekt\f0\'f6rlerde takip edilen en \'f6nemli ve pop\'fcler SDLC modelleri a\f1\'baa\u287?\u305?da belirtilmi\'batir;\par
Geli\'baig\f0\'fczel Geli\f1\'baitirme Modeli : SDLC modelinin \f0\'f6nemsenmedi\f1\u287?i ve aktif kullan\u305?lmad\u305?\u287?\u305? sistemlerde yer alan modeldir.\par
Waterfall Model (\'aaelale Modeli ): Yaz\u305?l\u305?m geli\'batirme i\f0\'e7in kullan\f1\u305?lan en erken SDLC yakla\'ba\u305?md\u305?r. Ayr\u305?ca do\u287?rusal s\u305?ral\u305? ya\'baam d\f0\'f6ng\'fcs\'fc modeli olarak da adland\f1\u305?r\u305?l\u305?r. Anlamak ve kullanmak \f0\'e7ok basittir. Bir waterfall modelde, her faz, bir sonraki a\f1\'baamaya ba\'balamadan \f0\'f6nce tamamlanmal\f1\u305?d\u305?r ve a\'baamalarda herhangi bir \f0\'f6rt\'fc\f1\'bame olmaz.Her safhan\u305?n sonunda bir dok\f0\'fcman olu\f1\'baturulur.\par
\u304?htiyac\u305? Belirleme / Requirement Collection\par
Analiz / Analysis\par
Tasar\u305?m / Design\par
Kodlama / Coding\par
Test / Test\par
Devreye Alma ve Entegrasyon.. /Implementation & Deployment olarak devam eder.\par
***D\f0\'f6k\'fcmantasyon her devrede yap\f1\u305?labilir\par
waterfall\par
\par
Iterative Model (Yinemeleli Modeli): Yinelemeli s\f0\'fcre\'e7, yaz\f1\u305?l\u305?m gereksinimlerinin k\f0\'fc\'e7\'fck bir setinin basit bir uygulamas\f1\u305?yla ba\'balar ve komple sistem uygulanmaya ba\'balan\u305?ncaya ve da\u287?\u305?t\u305?lana kadar geli\'baen s\f0\'fcr\'fcmleri tekrar tekrar geli\f1\'batirir.Yinelenen bir ya\'baam d\f0\'f6ng\'fcs\'fc modeli, gereksinimlerin tam bir spesifikasyonu ile ba\f1\'balamay\u305? denemez. Bunun yerine, geli\'batirme, yaz\u305?l\u305?m\u305?n yaln\u305?zca bir b\f0\'f6l\'fcm\'fcn\'fc belirleyerek ve uygulamakla ba\f1\'balar ve daha sonraki gereksinimleri belirlemek i\f0\'e7in g\'f6zden ge\'e7irilir. Bu i\f1\'balem tekrarlanarak modelin her tekrarlanmas\u305? sonunda yaz\u305?l\u305?m\u305?n yeni bir s\f0\'fcr\'fcm\'fcn\'fc \'fcretir.\par
Spiral Model : Tekrar eden geli\f1\'baim fikrini \'baelale modelinin sistematik, kontrol edilen y\f0\'f6nleriyle birle\f1\'batirir. Bu Spiral modeli, tekrar eden geli\'batirme s\f0\'fcreci modelinin ve s\f1\u305?ral\u305? do\u287?rusal geli\'batirme modelinin bir kombinasyonudur; yani, \'baelale modeli, risk analizine \f0\'e7ok \'f6nem verir. Spiral etraf\f1\u305?nda her iterasyon boyunca \f0\'fcr\'fcn\'fcn a\f1\'baamal\u305? olarak b\u305?rak\u305?lmas\u305?na veya art\u305?ml\u305? iyile\'batirme yap\u305?lmas\u305?na olanak tan\u305?r.\par
V-Model : S\f0\'fcre\'e7lerin y\'fcr\'fct\'fclmesinin V-\f1\'baeklinde s\u305?ral\u305? bir \'baekilde ger\f0\'e7ekle\f1\'bati\u287?i bir SDLC modelidir. Do\u287?rulama ve Do\u287?rulama modeli olarak da bilinir.\par
v\par
\par
Big Bang Model :Belirli bir i\'balemi izlemedi\u287?imiz bir SDLC modelidir. Geli\'baim sadece girdi olarak gerekli para ve \f0\'e7abayla ba\f1\'balar ve \f0\'e7\f1\u305?kt\u305?, m\f0\'fc\f1\'bateri gereksinimine g\f0\'f6re olabilecek veya olmayabilen bir yaz\f1\u305?l\u305?md\u305?r.Planlama \f0\'e7ok az gereklidir.Genellikle bu model, geli\f1\'batirme ekiplerinin \f0\'e7ok k\'fc\'e7\'fck oldu\f1\u287?u k\f0\'fc\'e7\'fck projeler i\'e7in izlenir.\par
RAD  Model (H\f1\u305?zl\u305? Uygulama Geli\'batirme): Belirli bir planlamaya gerek olmadan prototiplendirme ve yinelemeli geli\'batirme \f0\'fczerine kuruludur. Yaz\f1\u305?l\u305?m\u305?n kendisi yazma s\f0\'fcreci, \'fcr\'fcn\'fcn geli\f1\'batirilmesi i\f0\'e7in gerekli planlamay\f1\u305? gerektirir. H\u305?zl\u305? Uygulama Geli\'batirme \f0\'e7al\f1\u305?\'bataylar\u305? veya odak gruplar\u305?, m\f0\'fc\f1\'baterilerin yineleyici kavram\u305? kullanarak prototiplerin erken test edilmesi, mevcut prototiplerin (bile\'baenler) yeniden kullan\u305?m\u305?, s\f0\'fcrekli entegrasyon ve h\f1\u305?zl\u305? teslimat yoluyla m\f0\'fc\f1\'bateri gereksinimlerini toplamaya odaklanmaktad\u305?r.\par
Agile Model (\f0\'c7evik Modeli): S\'fcre\'e7 yaz\f1\u305?l\u305?m uyumlulu\u287?una ve m\f0\'fc\f1\'bateri memnuniyetine odaklanan, k\u305?sa vadeli planlar\u305? ve k\f0\'fc\'e7\'fck geli\f1\'bameleri yapmay\u305? uygun g\f0\'f6r\'fcr. Bu yap\f1\u305?lar yinelemelerde sa\u287?lan\u305?r. Her yineleme genellikle bir ila \f0\'fc\'e7 hafta s\'fcrer.Her tekrarlama, \'e7e\f1\'baitli alanlarda e\'ba zamanl\u305? olarak \f0\'e7al\f1\u305?\'baan \f0\'e7apraz i\f1\'balevsel ekipleri i\f0\'e7erir.Tekrarlama i\f1\'baleminin sonunda, m\f0\'fc\f1\'bateriye ve \f0\'f6nemli payda\f1\'balara bir \f0\'e7al\f1\u305?\'bama \f0\'fcr\'fcn\'fc g\'f6sterilir.\'e7evik.PNG\par
\'c7evik s\'fcre\'e7 modelleri :\par
-> S\f1\u305?n\u305?rsal programlama(Extreme Programming-XP)\par
-> \f0\'c7evik Birle\f1\'batirilmi\'ba S\f0\'fcre\'e7 (Agile Unified Process)\par
-> Scrum\par
-> Test G\'fcd\'fcml\'fc Geli\f1\'batirme (Test-driven Development)\par
->\f0\'c7evik bilgi Metodu (Agile Data Method)\par
-> \'d6zellik g\'fcd\'fcml\'fc geli\f1\'batirme (Feature-Driven Programming)\par
M\f0\'fc\f1\'bateriyi iyi anlamak ve onlar\u305?n isteklerine do\u287?ru \f0\'e7\'f6z\'fcm yollar\f1\u305?yla yakla\'bamak hem prestij a\f0\'e7\f1\u305?s\u305?ndan hem de zaman a\f0\'e7\f1\u305?s\u305?ndan \f0\'e7ok  \'f6nemlidir. \'c7\'fcnk\'fc  m\'fc\f1\'baterinin ne istedi\u287?inin anla\'ba\u305?lmamas\u305?,m\f0\'fc\f1\'baterinin ne istedi\u287?i bilinmemesi, istenilenin ba\'batan do\u287?ru net ifade edilmemesi yap\u305?lan \f0\'e7al\f1\u305?\'bamalar sonras\u305?nda bo\'baa k\f0\'fcrek \'e7ekmekten \'f6teye gidemeyecektir. Bu da g\'fcn sonunda bo\f1\'baa ge\f0\'e7en zaman israf\f1\u305?na ve m\f0\'fc\f1\'bateri memnuniyetsizli\u287?ine yol a\f0\'e7acakt\f1\u305?r. \par
T\u305?pk\u305? a\'baa\u287?\u305?daki \f0\'f6rnekte oldu\f1\u287?u gibi .\par
\f0\lang31\par
}
 